/*Решето Эратосфена - алгоритм, позволяющий найти все простые числа в отрезке
 * от 1 до n за О(nloglogn) операций. Запишем ряд чисел, будем вычеркивать
 * сначала все числа, делящиеся на 2, кроме самого числа 2, делющиеся на 3, кроме 3, на 5, 7, 11 и остальные до 7.
 * Моя реализация будет просеиватьс до корня из n и только по нечетным.*/
#include <iostream>
#include <vector>

using namespace std;
int main() {
    int n;
    cin >> n;
    vector <char> prime (n+1, true);
    //prime - массив, индексы которого будем проверять на
    //простоту, изначально все, кроме 0 и 1 будут считать простыми (true)
    prime[0]=prime[1]=false;
    for (int i=2; i*i<=n; ++++i)
        //просеивание только простыми, не превосходящими корня из n числами
        if (prime[i])
            //если простое, то ищем кратные ему
                for (int j=i*i; j<=n; j+=i)
                    prime [j]=false;
    for (int i=0; i<= n; i++){
        if (prime[i])
            cout << i;
    }

    return 0;
}
